/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   monitore_utils.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dlesieur <dlesieur@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/10/21 17:13:33 by dlesieur          #+#    #+#             */
/*   Updated: 2025/10/21 17:14:00 by dlesieur         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>
#include <string.h>
#include "global.h"

void	monitore_set_out1(t_monitore *m, const void *value, size_t n)
{
	if (m->out_given)
		free(m->out_given);
	m->out_given = malloc(n);
	if (m->out_given)
		memcpy(m->out_given, value, n);
}

void	monitore_set_out2(t_monitore *m, const void *value, size_t n)
{
	if (m->out_expected)
		free(m->out_expected);
	m->out_expected = malloc(n);
	if (m->out_expected)
		memcpy(m->out_expected, value, n);
}

int	monitore_compare(const t_monitore *m, size_t n)
{
	if (!m->out_given || !m->out_expected)
		return (-999);
	return (memcmp(m->out_given, m->out_expected, n));
}

void	monitore_free(t_monitore *m)
{
	if (m->out_given)
		free(m->out_given);
	if (m->out_expected)
		free(m->out_expected);
	m->out_given = NULL;
	m->out_expected = NULL;
}
