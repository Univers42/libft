name: Build C/C++ Project

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up compiler and build tools (with retries on Linux)
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            set -e
            attempt=0
            max=3
            until [ $attempt -ge $max ]
            do
              attempt=$((attempt+1))
              echo "Attempt $attempt / $max: apt-get update && install build-essential"
              sudo apt-get update -y && sudo apt-get install -y build-essential pkg-config || true
              # check if the packages are installed (simple test)
              if command -v gcc >/dev/null 2>&1; then
                echo "gcc present, continuing"
                break
              fi
              echo "apt-get failed or gcc not available yet, sleeping before retry..."
              sleep $((attempt * 5))
            done
            if ! command -v gcc >/dev/null 2>&1; then
              echo "ERROR: compiler not installed after retries"
              exit 1
            fi
          elif [ "${{ runner.os }}" = "macOS" ]; then
            echo "Using pre-installed clang on macOS"
          elif [ "${{ runner.os }}" = "Windows" ]; then
            echo "Windows runner - using preinstalled tools or install via choco if needed"
            # Optionally install MSYS2/MinGW with choco here if you need it.
          fi

      - name: Build project
        run: make -j
        shell: bash

      - name: Run ctype tests (capture exit code)
        run: |
          make test_ctype | tee test_ctype.log
          exit_code=${PIPESTATUS[0]}
          echo "CTest exit code: $exit_code"
          # upload fails will be handled by next step; fail this step if tests failed
          if [ "$exit_code" -ne 0 ]; then
            echo "Tests failed (exit $exit_code)"
            exit $exit_code
          fi
        shell: bash

      - name: Upload ctype test log
        uses: actions/upload-artifact@v4
        with:
          name: test_ctype-log
          path: test_ctype.log
